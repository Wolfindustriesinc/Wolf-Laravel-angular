{
  "_args": [
    [
      {
        "raw": "laravel-elixir-webpack-official@^1.0.2",
        "scope": null,
        "escapedName": "laravel-elixir-webpack-official",
        "name": "laravel-elixir-webpack-official",
        "rawSpec": "^1.0.2",
        "spec": ">=1.0.2 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\Wolf\\starter-laravel-angular"
    ]
  ],
  "_from": "laravel-elixir-webpack-official@>=1.0.2 <2.0.0",
  "_id": "laravel-elixir-webpack-official@1.0.10",
  "_inCache": true,
  "_location": "/laravel-elixir-webpack-official",
  "_nodeVersion": "6.4.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/laravel-elixir-webpack-official-1.0.10.tgz_1480609072887_0.725528942188248"
  },
  "_npmUser": {
    "name": "jeffreyway",
    "email": "jeffrey@laracasts.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "laravel-elixir-webpack-official@^1.0.2",
    "scope": null,
    "escapedName": "laravel-elixir-webpack-official",
    "name": "laravel-elixir-webpack-official",
    "rawSpec": "^1.0.2",
    "spec": ">=1.0.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/laravel-elixir-webpack-official/-/laravel-elixir-webpack-official-1.0.10.tgz",
  "_shasum": "4ed12ea8cdfc730fc937c230e40d9e03405e5815",
  "_shrinkwrap": null,
  "_spec": "laravel-elixir-webpack-official@^1.0.2",
  "_where": "C:\\Users\\Wolf\\starter-laravel-angular",
  "author": {
    "name": "Jeffrey Way"
  },
  "bugs": {
    "url": "https://github.com/JeffreyWay/laravel-elixir-webpack-official/issues"
  },
  "dependencies": {
    "buble": "^0.12.3",
    "buble-loader": "^0.2.2",
    "gulp-filter": "^4.0.0",
    "lodash": "^4.15.0",
    "webpack": "2.1.0-beta.15 - 2.1.0-beta.22",
    "webpack-stream": "github:jeroennoten/webpack-stream#patch-1"
  },
  "description": "Laravel Elixir Webpack integration",
  "devDependencies": {
    "babel-cli": "^6.10.1",
    "babel-preset-es2015": "^6.9.0"
  },
  "directories": {},
  "dist": {
    "shasum": "4ed12ea8cdfc730fc937c230e40d9e03405e5815",
    "tarball": "https://registry.npmjs.org/laravel-elixir-webpack-official/-/laravel-elixir-webpack-official-1.0.10.tgz"
  },
  "gitHead": "a017eb501cea68ed2fa64d3f9b26d227b4cfa93b",
  "homepage": "https://github.com/JeffreyWay/laravel-elixir-webpack-official",
  "keywords": [
    "laravel",
    "elixir",
    "webpack",
    "gulp"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "jeffreyway",
      "email": "jeffrey@laracasts.com"
    }
  ],
  "name": "laravel-elixir-webpack-official",
  "optionalDependencies": {},
  "readme": "# Laravel Elixir Webpack Integration\n\nThis extension brings Webpack support to Laravel Elixir, version 6 and up.\n\n## Step 1: Install\n\n```js\nnpm install laravel-elixir-webpack-official --save-dev\n```\n\n## Step 2: Usage\n\nSimilar to Browserify, the `webpack` method may be used to compile and bundle [ECMAScript 2015](https://babeljs.io/docs/learn-es2015/) into plain JavaScript.\nThis function accepts a file, relative to the `resources/assets/js` directory, and generates a single bundled file in the `public/js` directory:\n\n```javascript\nelixir(function(mix) {\n    mix.webpack('app.js');\n});\n```\n\nTo choose a different output or base directory, simply specify your desired paths as the second and third arguments, respectively.\n\n```javascript\nelixir(function(mix) {\n    mix.webpack('app.js', 'public/dist', 'app/assets/js');\n});\n```\n\nThis will compile `app/assets/js/app.js` to `public/dist/app.js`.\n\nIf you'd like to leverage more of Webpack's functionality, Elixir will read any `webpack.config.js` file in your project root, and [factor its configuration](https://webpack.github.io/docs/configuration.html) into the build process. Alternatively, you may pass your Webpack-specific configuration as the fourth argument to `mix.webpack()`.\n\n## Step 3: Plugins\n\nIf you've created a plugin, and need to hook your own Webpack config into Elixir's defaults, add the following to your script:\n\n```js\nElixir.webpack.mergeConfig({\n    babel: {\n        presets: ['es2015'],\n        plugins: ['transform-runtime'],\n    },\n    module: {\n        loaders: [{\n            test: /\\.vue$/,\n            loader: 'vue'\n        }]\n    }\n});\n```\n\n`Elixir.webpack.mergeConfig(newConfig)` will recursively merge your provided configuration with ours. It also properly merges any nested  arrays, so as not to override important default configuration. For example, in the code snippet above, the addition of the Vue loader will not overwrite the default loaders that we provide.",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/JeffreyWay/laravel-elixir-webpack-official.git"
  },
  "scripts": {
    "compile": "babel --presets=es2015 -d dist src",
    "prepublish": "npm run compile"
  },
  "version": "1.0.10"
}
